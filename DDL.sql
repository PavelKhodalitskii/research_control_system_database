DROP TABLE IF EXISTS Research;
DROP TABLE IF EXISTS Event;
DROP TABLE IF EXISTS ResearchParticipants;
DROP TABLE IF EXISTS RelationTeachersCommitette;
DROP TABLE IF EXISTS RelationGraduateStudentCommitette;
DROP TABLE IF EXISTS Commitette;
DROP TABLE IF EXISTS POST;
DROP TABLE IF EXISTS AcademicDegree;

DROP TABLE IF EXISTS RelationTeacherDepartment;

DROP TABLE IF EXISTS TeacherProfile;
DROP TABLE IF EXISTS GraduateStudentProfile;
DROP TABLE IF EXISTS StudentProfile;
DROP TABLE IF EXISTS Account;

DROP TABLE IF EXISTS Groups;
DROP TABLE IF EXISTS Speciality;
DROP TABLE IF EXISTS Department;
DROP TABLE IF EXISTS Faculty;

CREATE TABLE Faculty(
	ID SERIAL PRIMARY KEY,
	Name VARCHAR(256) NOT NULL
);

CREATE TABLE Department(
	ID SERIAL PRIMARY KEY,
	Name VARCHAR(512) NOT NULL,
	Faculty INTEGER REFERENCES Faculty(ID) ON UPDATE CASCADE
);

CREATE TABLE Speciality(
	ID SERIAL PRIMARY KEY,
	Name VARCHAR(256) NOT NULL,
	Department INTEGER REFERENCES Department(ID) ON UPDATE CASCADE
);


CREATE TABLE Groups(
	ID SERIAL PRIMARY KEY,
	Name VARCHAR(64) NOT NULL,
	Specialty INTEGER REFERENCES Speciality(ID) ON UPDATE CASCADE
);

CREATE TABLE Account(
	ID SERIAL PRIMARY KEY,
	FirstName VARCHAR(128) NOT NULL CHECK (length(FirstName) > 0),
	LastName VARCHAR(128) NOT NULL check (length(LastName) > 0),
	Patronymic VARCHAR(128)
);

CREATE TABLE StudentProfile(
	ID SERIAL PRIMARY KEY,
	Year INTEGER NOT NULL CHECK (Year > 0),
	StudGroup INTEGER REFERENCES Groups(ID) ON DELETE SET NULL,
	Account INTEGER REFERENCES Account(ID) ON DELETE CASCADE
);

CREATE TABLE Post(
	ID SERIAL PRIMARY KEY,
	PostName VARCHAR(128)
)

CREATE TABLE AcademicDegree(
	ID SERIAL PRIMARY KEY,
	AcademicDegreeName VARCHAR(128)
)

CREATE TABLE TeacherProfile(
	ID SERIAL PRIMARY KEY,
	Post INTEGER REFERENCES Post(ID) ON UPDATE CASCADE,
	Status VARCHAR(256),
	Degree INTEGER REFERENCES AcademicDegree(ID) ON UPDATE CASCADE,
	Account INTEGER REFERENCES Account(ID) ON UPDATE CASCADE,
	Department INTEGER REFERENCES Department(ID) ON UPDATE CASCADE,
	isHead BOOLEAN
);


CREATE TABLE GraduateStudentProfile(
	ID SERIAL PRIMARY KEY,
	Year INTEGER NOT NULL CHECK (Year > 0),
	StudGroup INTEGER REFERENCES Groups(ID) ON DELETE SET NULL,
	Account INTEGER REFERENCES Account(ID) ON DELETE CASCADE
);

ALTER TABLE GraduateStudentProfile
    DROP COLUMN Department,  -- Удаление старой колонки Department
    ADD COLUMN StudGroup INTEGER REFERENCES Groups(ID) ON DELETE SET NULL;  -- Добавление новой колонки StudGroup с внешним ключом


-- CREATE TABLE RelationTeacherDepartment(
-- 	ID SERIAL PRIMARY KEY,
-- 	TeacherProfile INTEGER REFERENCES TeacherProfile(ID) ON DELETE CASCADE,
-- 	Department INTEGER REFERENCES Department(ID) ON DELETE CASCADE,
-- 	IsHead BOOLEAN DEFAULT False
-- );

CREATE TABLE Commitette(
	ID SERIAL PRIMARY KEY,
	Chairman INTEGER REFERENCES TeacherProfile(ID) ON DELETE SET NULL
);

CREATE TABLE RelationTeachersCommitette(
	ID SERIAL PRIMARY KEY,
	TeacherProfile INTEGER REFERENCES TeacherProfile(ID) ON UPDATE CASCADE,
	Commitette INTEGER REFERENCES Commitette(ID) ON DELETE CASCADE
);

CREATE TABLE RelationGraduateStudentCommitette(
	ID SERIAL PRIMARY KEY,
	GraduateStudentProfile INTEGER REFERENCES GraduateStudentProfile(ID) ON UPDATE CASCADE,
	Commitette INTEGER REFERENCES Commitette(ID) ON DELETE CASCADE
);

CREATE TABLE Event(
	ID SERIAL PRIMARY KEY,
	Name VARCHAR(512) NOT NULL,
	Type VARCHAR(256),
	AddressCity VARCHAR(128),
	AddressStreet VARCHAR(128),
	AddressNumber VARCHAR(128),
	Date DATE,
	Faculty INTEGER REFERENCES Faculty(ID) ON DELETE SET NULL
)

CREATE TABLE Research(
	ID SERIAL PRIMARY KEY,
	Commitette INTEGER REFERENCES Commitette(ID) ON DELETE SET NULL,
	Event INTEGER REFERENCES Event(ID) ON DELETE CASCADE
);

CREATE TABLE ResearchParticipants(
	ID SERIAL PRIMARY KEY,
	Research INTEGER REFERENCES Research(ID) ON UPDATE CASCADE,
	Account INTEGER REFERENCES Account(ID) ON UPDATE CASCADE
)

SELECT * FROM Research

